# lighttpd configuration file
# 
## modules to load
# all other module should only be loaded if really neccesary
# - saves some time
# - saves memory
server.modules              = ( 
#                               "mod_rewrite", 
#                               "mod_redirect", 
				"mod_auth", 
#                               "mod_status", 
#				"mod_simple_vhost",
#				"mod_evhost",
#				"mod_cgi",
				"mod_fastcgi"
#				"mod_compress",
#                               "mod_ssi",
#                               "mod_usertrack"
)

## a static document-root, for virtual-hosting take look at the 
## server.virtual-* options
server.document-root             = "/opt/hotspot/www/"

## where to send error-messages to


# files to check for if .../ is requested
server.indexfiles          = ( 
				"uam.rb",
				"index.html", "default.html", 
                                "index.htm", "default.htm" )

# mimetype mapping
mimetype.assign            = (  
  ".pdf"          =>      "application/pdf",
  ".class"        =>      "application/octet-stream",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".txt"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml"
 )

# Use the "Content-Type" extended attribute to obtain mime type if possible
# mimetypes.use-xattr = "enable"


######### Options that are good to be but not neccesary to be changed #######

## bind to port (default: 80)
server.port                = 80

## bind to localhost (default: all interfaces)
#server.bind                = "grisu.home.kneschke.de"

## error-handler for status 404
server.error-handler-404   = "/uam.rb"
#server.error-handler-404   = "/error-handler.php"


###### virtual hosts
##
##   If you want name-based virtual hosting add the next three settings and load
##   mod_simple_vhost
##
## document-root =
##   virtual-server-root + virtual-server-default-host + virtual-server-docroot or
##   virtual-server-root + http-host + virtual-server-docroot
##
#simple-vhost.server-root         = "/home/weigon/wwwroot/servers/"
#simple-vhost.default-host        = "grisu.home.kneschke.de"
#simple-vhost.document-root       = "/pages/"


## 
## Format: <errorfile-prefix><status>.html
## -> ..../status-404.html for 'File not found'
#server.errorfile-prefix    = "/opt/hotspot/error-"

## virtual directory listings
#server.dir-listing          = "enable"

## send unhandled HTTP-header headers to error-log
#debug.dump-unknown-headers  = "enable"

### only root can use these options
#
# chroot() to directory (default: no chroot() )
server.chroot            = "/"

## change uid to <uid> (default: don't care)
#server.username            = "nobody"

## change uid to <uid> (default: don't care)
#server.groupname           = "nobody"

## to help the rc.script
#server.pid-file            = "/var/run/lighttpd.pid"

#### compress module
#compress.cache-dir          = "/dev/null/"
#compress.filetype           = ("text/plain", "text/html")

#### fastcgi module
## read fastcgi.txt for more info
fastcgi.server              = ( ".rb" =>
				( "localhost" => 
				  ( 
				    "socket" => "/tmp/ruby.socket",
				    "bin-path" => "/usr/bin/ruby-fcgi-dispatcher",
				    "max-procs" => 1
				  )
				)
			      )

#### CGI module
#cgi.assign                  = ( ".pl"  => "/usr/bin/perl",
#                                ".cgi" => "/usr/bin/perl" )
#

#### SSL engine
#ssl.engine                  = "enable"
#ssl.pemfile                 = "server.pem"

#### status module
# status.status-url = "/server-status"
# status.config-url = "/server-config"

#### auth module
## read authentification.txt for more info
 auth.backend                = "plain"
 auth.backend.plain.userfile = "/opt/hotspot/hotspot.user"
# auth.backend.plain.groupfile = "lighttpd.group"

 auth.require                = (
        "/main.rb" => 
        ( 
				  "method"  => "basic",
				  "realm"   => "admin",
				  "require" => "user=admin"
				),
	      "/addtime.rb" => 
        ( 
				  "method"  => "basic",
				  "realm"   => "admin",
				  "require" => "user=admin"
				),
	      "/info.rb" => 
        ( 
				  "method"  => "basic",
				  "realm"   => "admin",
				  "require" => "user=admin"
				),
	      "/logs.rb" => 
        ( 
				  "method"  => "basic",
				  "realm"   => "admin",
				  "require" => "user=admin"
				)
)

#### url handling modules (rewrite, redirect, access)
# url.rewrite                 = ( "^/$"             => "/server-status" )
# url.redirect                = ( "^/wishlist/(.+)" => "http://www.123.org/$1" )

#
# define a pattern for the host url finding
# %% => % sign
# %0 => domain name + tld
# %1 => tld
# %2 => domain name without tld
# %3 => subdomain 1 name
# %4 => subdomain 2 name
#
# evhost.path-pattern = "/home/storage/dev/www/%3/htdocs/"

#### expire module
# expire.url                  = ( "/buggy/" => "access 2 hours", "/asdhas/" => "access plus 1 seconds 2 minutes")

#### ssi
# ssi.extension              = ( ".shtml" )
server.max-worker = 0
